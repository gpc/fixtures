buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

version "3.0.0.RC5"
group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    profile "org.grails.profiles:plugin"
    compile "org.grails:grails-core"
    console "org.grails:grails-console"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.h2database:h2"

    testCompile "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    testCompile "org.hibernate:hibernate-ehcache"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'

    provided "org.grails.plugins:build-test-data:3.3.1"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}
grailsPublish {
    githubSlug = 'gpc/grails-fixtures'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails Fixtures Plugin"
    desc = "Load complex domain data via a simple DSL"
    developers = ["Grails Plugin Collective":"grails.plugin.collective@gmail.com"]
    portalUser = ""
    portalPassword = ""
}

jar {
//    exclude "fixtures"
    exclude "grails/plugin/fixtures/test/**"
    exclude "test/**"
}

//def version = "1.3.1-SNAPSHOT"
//def grailsVersion = "1.3 > *"

//def documentation = "http://gpc.github.com/grails-fixtures/"

//def issueManagement = [ system: "JIRA", url: "http://jira.grails.org/browse/GPFIXTURES" ]
//def scm = [url: "https://github.com/gpc/grails-fixtures"]

//
//assets {
//    packagePlugin = true
//}
